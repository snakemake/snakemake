name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches_ignore: []

jobs:
  formatting:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v1

      - name: Setup black environment
        run: conda create --quiet --name black black

      - name: Check formatting
        run: |
          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate black
          black --check snakemake tests/*.py

      - name: Comment PR
        if: github.event_name == 'pull_request' && failure()
        uses: marocchino/sticky-pull-request-comment@v1.1.0
        with:
          message: 'Please format your code with [black](https://black.readthedocs.io): `black snakemake tests/*.py`.'
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  testing:
    runs-on: ubuntu-latest
    needs: formatting
    env:
      AWS_AVAILABLE: ${{ secrets.AWS_ACCESS_KEY_ID }}
    steps:
      - uses: actions/checkout@v1
      
      - name: Setup Snakemake environment
        run: conda env create --quiet --name snakemake --file test-environment.yml

      - name: Setup apt dependencies
        run: sudo apt install -y singularity-container stress
        
      - name: Setup iRODS
        run: |
          docker build -t irods-server tests/test_remote_irods
          docker run -d -p 1247:1247 --name provider irods-server -i run_irods
          sleep 10
          docker exec -u irods provider iput /incoming/infile
          cp -r tests/test_remote_irods/setup-data ~/.irods

      - name: Run tests
        env:
          CI: true
        run: |
          # activate conda env
          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate snakemake
          
          pytest -v -x tests/test_expand.py tests/test_io.py tests/test_schema.py tests/tests.py

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        if: env.AWS_AVAILABLE
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Test AWS execution
        if: env.AWS_AVAILABLE && success()
        env: 
          CI: true
        run: |
          # activate conda env
          export PATH="/usr/share/miniconda/bin:$PATH"
          source activate snakemake

          pytest -v -x tests/test_tibanna.py

      - name: Build container image
        run: docker build .
