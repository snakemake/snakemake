version: 2.1
orbs:
  singularity: singularity/singularity@1.0.8
  conda: deepgenomics/conda@4.0.0
  codecov: codecov/codecov@1.0.5

jobs:
  build:
    machine: true
    environment:
      - GCLOUD: /opt/google-cloud-sdk/bin/gcloud
      - GSUTIL: /opt/google-cloud-sdk/bin/gsutil
      - BOTO_CONFIG: /dev/null
      - DG_CONDA_ROOT: $HOME/miniconda
      - CONDA_INSTALLER: https://repo.continuum.io/miniconda/Miniconda3-latest-Linux-x86_64.sh
      - PLATFORM: linux
    steps:
      - checkout
      - run:
          name: Setup additional dependencies
          command: |
            sudo apt-get update
            sudo apt-get install stress

      - singularity/install-go
      - singularity/debian-install-3
      - conda/save-conda:
          key: conda-install-{{ checksum ".circleci/config.yml" }}
          steps:
            - conda/resolve-envvars
            - conda/install-conda
      - conda/save-conda:
          key: conda-envs-{{ checksum "test-environment.yml" }}
          steps:
            - run:
                name: Setup codecov
                command: |
                  conda create -n codecov codecov
            - run:
                name: Setup black
                command: |
                  conda create -n black black
            - run:
                name: Setup Snakemake dependencies
                command: |
                  conda env create --quiet --name snakemake --file test-environment.yml

      - run:
          name: Check formatting
          command: |
            conda activate black
            black --check snakemake || echo "Please run 'black snakemake'."
      - run:
          name: Setup Snakemake
          command: |
            conda activate snakemake
            pip install -e .
      - run:
          name: Setup iRODS Docker image
          command: |
            docker build -t irods-server tests/test_remote_irods
            docker run -d -p 1247:1247 --name provider irods-server -i run_irods
            sleep 10
            docker exec -u irods provider iput /incoming/infile
            cp -r tests/test_remote_irods/setup-data ~/.irods
      - run:
          name: Setup gcloud
          command: |
            # skip if key is unset
            if [ -z $GCLOUD_SERVICE_KEY ]; then exit 0; fi
            # otherwise init cloud
            echo $GCLOUD_SERVICE_KEY | base64 --decode --ignore-garbage > ${HOME}/gcloud-service-key.json
            sudo $GCLOUD components install kubectl
            sudo chown -R $USER:$USER /home/circleci/.config/gcloud
            $GCLOUD auth activate-service-account --key-file=${HOME}/gcloud-service-key.json
            $GCLOUD config set project snakemake-testing
      - run:
          name: Run tests
          no_output_timeout: 60m
          command: |
            export GCLOUD_CLUSTER=t-`uuidgen`
            export GOOGLE_APPLICATION_CREDENTIALS=${HOME}/gcloud-service-key.json
            # Fix bash_env to only modify, not overwrite $PATH.
            # This is necessary because snakemake invokes new shells, that have to inherit
            # the outside PATH instead of overriding it.
            sed -i -r "/PATH=/ s/$/:\$PATH/" $BASH_ENV
            conda activate snakemake
            pytest tests/test*.py -v -x --cov . --cov-report xml:coverage.xml
      - codecov/upload:
          file: coverage.xml
      - run:
          name: Build container image
          command: docker build .
          
