"""
Common code for unit testing of rules generated with Snakemake {{ version }}.
"""

from pathlib import Path
import subprocess as sp
import os


class OutputChecker:
    def __init__(self, data_path, expected_path, workdir):
        self.data_path = data_path
        self.expected_path = expected_path
        self.workdir = workdir

    def check(self):
        input_files = set(
            (Path(path) / f).relative_to(self.data_path)
            for path, subdirs, files in os.walk(self.data_path)
            for f in files
        )
        # DEBUG
        print(f"input: {input_files}")
        output_files = set(
            (Path(path) / f).relative_to(self.workdir)
            for path, subdirs, files in os.walk(self.workdir)
            for f in files
        )
        output_files = set(
            output_file
            for output_file in output_files
            if output_file not in input_files and not str(output_file).startswith(".")
        )
        # DEBUG
        print(f"output: {output_files}")
        expected_files = set(
            (Path(path) / f).relative_to(self.expected_path)
            for path, subdirs, files in os.walk(self.expected_path)
            for f in files
        )
        # DEBUG
        print(f"expected: {expected_files}")

        unexpected_files = set()
        for f in expected_files:
            if f in output_files:
                self.compare_files(self.workdir / f, self.expected_path / f)
            else:
                unexpected_files.add(f)
        if unexpected_files:
            raise ValueError(
                "Unexpected files:\n{}".format(
                    "\n".join(sorted(map(str, unexpected_files)))
                )
            )

    def compare_files(self, generated_file, expected_file):
        sp.check_output(["cmp", generated_file, expected_file])
